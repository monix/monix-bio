name: build

on: [ push, pull_request ]

jobs:
  
  jvm-tests:
    name: scala-${{ matrix.scala }} jdk-${{ matrix.java }} tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 11 ]
        scala: [ 2.12.14, 2.13.5, 3.0.0 ]
    
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "adopt@1.${{ matrix.java }}"     
      - name: Run Tests for Java ${{ matrix.java }}, Scala ${{ matrix.scala }}
        run: sbt ci-jvm
              
  js-tests:
    name: scalajs-${{ matrix.scalajs }} scala-${{ matrix.scala }} jdk-${{ matrix.java }} tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        java: [8, 11]
        scala: [ 2.12.14, 2.13.5, 3.0.0 ]
        scalajs: [1.5.1]
    
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "adopt@1.${{ matrix.java }}"
      - name: Run Tests for Java ${{ matrix.java }}, Scala ${{ matrix.scala }}, ScalaJS ${{ matrix.scalajs }}
        run: sbt ci-js

  mima:
    name: Mima binary compatibility test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "adopt@1.11"
      - name: Run Mima binary compatibility test for Java 11
        run: sbt ci-jvm-mima

  publish:
    needs: [ js-tests, jvm-tests, mima ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v10
      - uses: olafurpg/setup-gpg@v3
      - name: Publish release ${{ github.ref }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      - name: Publish documentation web page
        run: |
          ./.github/scripts/publish-web-site.sh
        env:
          GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
